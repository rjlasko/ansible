---
## -------------------------------------------------------------- ##
## This script performs the installation of XRDP from source code ##
## -------------------------------------------------------------- ##

# XXX: Here is a (slightly modified) copy of the instructions found at:
# https://github.com/neutrinolabs/xrdp/wiki/Building-on-Debian-8

- stat:
    path: "{{ xrdp_filepath }}"
  register: xrdp_stat_result

- when: xrdp_stat_result.stat.exists == true
# need to unbuffer STDOUT because xrdp's cli is goofy
  shell: "stdbuf -o0 {{ xrdp_filepath }} --help | grep {{ xrdp_version }}"
  register: xrdp_version_detection

- stat:
    path: "{{ xorgxrdp_filepath }}"
  register: xorgxrdp_stat_result

- when: xorgxrdp_stat_result.stat.exists == true
  shell: "grep {{ xorg_xrdp_version }} {{ xorgxrdp_filepath }}"
  register: xorgxrdp_version_detection

# unless forced, stop here if it appears that everything has been installed
- name: 
  when: not (xrdp_force_install is defined or
        xrdp_stat_result.stat.exists == true and
        xrdp_version_detection is defined and
        xrdp_version_detection.rc == 0 and
        xorgxrdp_stat_result.stat.exists == true and
        xorgxrdp_version_detection is defined and
        xorgxrdp_version_detection.rc == 0)
  block:
    - package:
        name: "{{ xrdp_packages }}"
        state: present
      vars:
        xrdp_packages:
          - git
          - autoconf
          - libtool
          - pkg-config
          - gcc
          - g++
          - make
          - libssl-dev
          - libpam0g-dev
          - libjpeg-dev
          - libx11-dev
          - libxfixes-dev
          - libxrandr-dev
          - flex
          - bison
          - libxml2-dev
          - intltool
          - xsltproc
          - xutils-dev
          - python-libxml2
          - g++
          - xutils
          - libfuse-dev
          - libmp3lame-dev
          - nasm
          - libpixman-1-dev
          - xserver-xorg-dev
    
    - name: mktemp dir
      tempfile:
        state: directory
        suffix: build
      register: tmp_dir
    
    ### Xrdp ###
    
    # download & extract sources from the release page
    # Or clone xrdp and xorgxrdp repository from GitHub (if you need the devel branch)
    - name: unarchive xrdp
      unarchive:
        src: "https://github.com/neutrinolabs/xrdp/releases/download/v{{ xrdp_version | mandatory }}/xrdp-{{ xrdp_version | mandatory }}.tar.gz"
        dest: "{{ tmp_dir.path }}"
        remote_src: yes
    
    - command: echo "{{ tmp_dir.path }}/xrdp-{{ xrdp_version | mandatory }}/"
      register: xrdp_src
    
    - name: bootstrap xrdp
      command: ./bootstrap
      args:
        chdir: "{{ xrdp_src.stdout }}"
    
    - name: configure xrdp
      command: ./configure --enable-fuse --enable-mp3lame --enable-pixman
      args:
        chdir: "{{ xrdp_src.stdout }}"
    
    - name: make xrdp
      command: make
      args:
        chdir: "{{ xrdp_src.stdout }}"
    
    - name: install xrdp
      command: make install
      args:
        chdir: "{{ xrdp_src.stdout }}"
    
    - name: remove old xrdp
      file:
        path: /usr/sbin/xrdp
        state: absent
    
    - name: hardlink xrdp
      file:
        src: /usr/local/sbin/xrdp
        path: /usr/sbin/xrdp
        state: hard
        mode: ugo=rx
    
    - name: remove old xrdp-sesman
      file:
        path: /usr/sbin/xrdp-sesman
        state: absent
    
    - name: hardlink xrdp-sesman
      file:
        src: /usr/local/sbin/xrdp-sesman
        path: /usr/sbin/xrdp-sesman
        state: hard
        mode: ugo=rx
    
    ### Xorg-Xrdp ###
    
    - name: unarchive xorgxrdp
      unarchive:
        src: "https://github.com/neutrinolabs/xorgxrdp/releases/download/v{{ xorg_xrdp_version | mandatory }}/xorgxrdp-{{ xorg_xrdp_version | mandatory }}.tar.gz"
        dest: "{{ tmp_dir.path }}"
        remote_src: yes
    
    - command: echo "{{ tmp_dir.path }}/xorgxrdp-{{ xorg_xrdp_version | mandatory }}/"
      register: xorgrdp_src
    
    - name: bootstrap xorgxrdp
      command: ./bootstrap
      args:
        chdir: "{{ xorgrdp_src.stdout }}"
    
    - name: configure xorgxrdp
      command: ./configure --enable-fuse --enable-mp3lame --enable-pixman
      args:
        chdir: "{{ xorgrdp_src.stdout }}"
    
    - name: make xorgxrdp
      command: make
      args:
        chdir: "{{ xorgrdp_src.stdout }}"
    
    - name: install xorgxrdp
      command: make install
      args:
        chdir: "{{ xorgrdp_src.stdout }}"
