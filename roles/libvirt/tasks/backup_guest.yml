---
## --------------- ##
## Backup Guest VM ##
## --------------- ##

- name: shutdown VM
  ansible.builtin.include_tasks: shutdown_guest.yml

- name: clear existing backup directory
  ansible.builtin.file:
    path: "{{ libvirt_guest.backup_dir }}"
    state: absent

- name: remake backup directory
  ansible.builtin.file:
    path: "{{ libvirt_guest.backup_dir }}"
    state: directory
    mode: u=rwx,g=rx,o-rwx

- name: backup XML
  ansible.builtin.shell: >
    set -o pipefail
    && virsh dumpxml {{ libvirt_guest.name }} > {{ libvirt_guest.backup_dir }}/domain.xml
  args:
    executable: bash
  changed_when: true

- name: list VM block devices
  ansible.builtin.shell: >
    set -o pipefail
    && virsh domblklist {{ libvirt_guest.name }}
    | tail -n+3
    | awk '{print $2}'
  args:
    executable: bash
  changed_when: false
  register: libvirt_guest_domblklist_vols

- name: list volumes
  ansible.builtin.shell: >
    set -o pipefail
    && virsh vol-list --pool default
    | tail -n+3
    | sed '/^[[:space:]]*$/d'
    | awk '{print $2}'
  args:
    executable: bash
  failed_when: false
  changed_when: false
  register: libvirt_existing_vols

- name: backup VM associated volumes
  loop: "{{ libvirt_guest_domblklist_vols.stdout_lines }}"
  loop_control:
    loop_var: libvirt_guest_vol
  when: libvirt_guest_vol in libvirt_existing_vols.stdout_lines
  become: true
  ansible.builtin.command: qemu-img convert -O qcow2 {{ libvirt_guest_vol }} {{ libvirt_guest.backup_dir }}/{{ libvirt_guest_vol | basename | splitext | first }}.qcow2
