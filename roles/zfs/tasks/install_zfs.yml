---
## --------------------- ##
## Installs ZFS on Linux ##
## --------------------- ##

- name: detect if kernel module is available to be loaded
  ansible.builtin.find:
    path: "/lib/modules/{{ ansible_facts['kernel'] }}"
    file_type: directory
    recurse: true
    pattern: "zfs"
  register: zfs_detect_modules

- name: install zfs as dynamic kernel module
  when: (zfs_detect_modules.files | length) == 0
  block:
    - name: validate distribution support for DKMS installation
      when: ansible_facts['distribution'] not in zfs_dkms_plus_dependencies
      ansible.builtin.fail:
        msg: "ZFS DKMS dependencies for {{ ansible_facts['distribution'] }} have not been defined!"

    - name: add build dependencies
      ansible.builtin.package:
        name: "{{ zfs_dkms_plus_dependencies[ansible_facts['distribution']] }}"
        state: present

    - name: install ZFS via Dynamic Kernal Module Support
      # it is likely that this will fail when ZFS disks, new to this system, are
      # detected upon installation. Continue despite this, knowing latter tasks
      # will fail if there is an issue.
      # We have observed this behavior in Debian, and accept it
      ignore_errors: "{{ ansible_facts['distribution'] == 'Debian' }}"
      ansible.builtin.package:
        name:
          - zfs-dkms
        state: present


- name: load ZFS module into the kernel
  community.general.modprobe:
    name: zfs
    state: present

- name: install zfsutils-linux
  ansible.builtin.package:
    name: zfsutils-linux
    state: present
