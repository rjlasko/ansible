---
## -------------- ##
## Start Guest VM ##
## -------------- ##

- name: "detect VM state before attempt restart: {{ libvirt.vm.name }}"
  community.libvirt.virt:
    command: status
    name: "{{ libvirt.vm.name }}"
  register: libvirt_vm_status

- name: error out if VM is in unacceptable state
  when: >
    libvirt_vm_status.status != 'running'
    and
    libvirt_vm_status.status != 'shutdown'
  ansible.builtin.fail:
    msg: "Cannot (re)start {{ libvirt.vm.name }} from state: {{ libvirt_vm_status.status }}"

- name: start from shutdown state
  when: libvirt_vm_status.status == 'shutdown'
  block:
    - name: "start VM: {{ libvirt.vm.name }}"
      community.libvirt.virt:
        command: start
        name: "{{ libvirt.vm.name }}"

    - name: "waiting until restarted: {{ libvirt.vm.name }}"
      community.libvirt.virt:
        command: status
        name: "{{ libvirt.vm.name }}"
      register: libvirt_vm_status
      until: libvirt_vm_status.status == 'running'
      # check for desired status for 5 minutes
      delay: 3
      retries: 100

- name: "wait for {{ libvirt.vm.name }} to respond with SSHd"
  when: libvirt.vm.check_ssh | default(true)
  ansible.builtin.wait_for:
    host: "{{ libvirt.vm.dns_address | mandatory }}"
    port: 22
