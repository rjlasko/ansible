---
## -------------------------------------- ##
## Installs pipx if not already installed ##
## -------------------------------------- ##

- name: detect pipx installation
  ansible.builtin.command: which pipx
  register: which_pipx_initial
  ignore_errors: true
  changed_when: false

- name: set pipx_executable if installed
  when: which_pipx_initial.rc == 0
  ansible.builtin.set_fact:
    pipx_executable: "{{ which_pipx_initial.stdout }}"

- when: which_pipx_initial.rc != 0
  block:
    - name: install pipx
      community.general.homebrew:
        name: pipx
        state: present

    - name: detect pipx installation
      ansible.builtin.command: which pipx
      changed_when: false
      register: which_pipx_retry

    - name: get pipx executable path after installation
      when: which_pipx_retry.changed
      ansible.builtin.set_fact:
        pipx_executable: "{{ which_pipx_retry.stdout }}"

- name: ensure pipx in PATH
  when: pipx_ensurepath
  command: pipx ensurepath
  register: pipx_ensurepath_result
  changed_when: "{{ 'Success' in pipx_ensurepath_result.stdout }}"

- name: "add pipx completions to shell initialization script: {{ pipx_completions_init_file }}"
  lineinfile:
    path: "{{ pipx_completions_init_file }}"
    create: "{{ pipx_completions_init_file_create }}"
    regexp: 'pipx'
    line: 'eval "$(register-python-argcomplete pipx)"'
    state: present
