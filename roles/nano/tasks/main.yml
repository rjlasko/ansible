---
## ---------------------------- ##
## Installs and configures nano ##
## ---------------------------- ##

- when: nano_install
  block:
    - name: install nano (MacOS)
      when: ansible_facts.system == 'Darwin'
      community.general.homebrew:
        name: nano
        state: present

    - name: "install nano ({{ ansible_facts.os_family }} Linux)"
      when: ansible_facts.system == 'Linux'
      become: true
      ansible.builtin.package:
        name: nano
        state: present

- when: nanorc_user_cfg
  block:
    - name: "clear {{ nanorc_filepath }}"
      ansible.builtin.file:
        path: "{{ nanorc_filepath }}"
        state: absent

    - name: find nanorc includes
      ansible.builtin.find:
        paths:
          - /usr/local/Cellar/nano
          - /usr/share/nano
        recurse: true
        patterns: "*.nanorc"
      register: nanorc_includes

    - name: find (sudo-ing) user's group
      ansible.builtin.command: "id -gn {{ ansible_user }}"
      changed_when: false
      register: nano_user_group_name

    - name: apply nano settings file
      ansible.builtin.template:
        src: nanorc.j2
        dest: "{{ nanorc_filepath }}"
        owner: "{{ ansible_user }}"
        group: "{{ nano_user_group_name.stdout }}"
        mode: u=rw,g=r,o-rwx

- name: set nano default editor for user
  when: nano_init_file
  ansible.builtin.lineinfile:
    dest: "{{ nano_init_file }}"
    create: true
    state: present
    regexp: '^#?EDITOR'
    line: 'EDITOR=nano'
