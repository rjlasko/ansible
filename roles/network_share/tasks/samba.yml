---
## ----------------------- ##
## Installs Samba & shares ##
## ----------------------- ##

# TODO: need cronjob to backup samba passwords and secrets

- name: install SAMBA packages
  ansible.builtin.package:
    name: "{{ samba_packages }}"
    state: present
  vars:
    samba_packages:
      - samba
#      # Are there other things we need?
#      - samba-client
#      - samba-common
#      - cifs-utils
#      - system-config-samba

- name: configure smb.conf
  when: net_share.samba.config is defined
  block:
    - name: find smbd CONFIGFILE
      ansible.builtin.shell: smbd -b | grep CONFIGFILE | cut -d ":" -f 2 | xargs
      register: config_file

    - ansible.builtin.set_fact:
        samba_config_file: "{{ config_file.stdout }}"

    - name: backup & restore "{{ samba_config_file }}"
      ansible.builtin.include_role:
        name: backup_restore
      vars:
        br_target: "{{ samba_config_file }}"

    - name: SAMBA shares
      loop: "{{ net_share.samba.config | default([]) }}"
      loop_control:
        loop_var: samba_config
      ansible.builtin.include_tasks: samba_config.yml

    - name: restart SAMBA service
      ansible.builtin.service:
        name: smbd
        state: restarted
        enabled: true

- name: restore SMB passwords from private directory
  when: net_share.samba.restore_private is defined
  block:
    - name: verify "{{ net_share.samba.restore_private }}/passdb.tdb" exists
      ansible.builtin.stat:
        path: "{{ net_share.samba.restore_private }}/passdb.tdb"
      register: passdb_tdb
      failed_when: >
        passdb_tdb.stat.exists == 'False' or
        passdb_tdb.stat.isreg == 'False'

    - name: verify "{{ net_share.samba.restore_private }}/secrets.tdb" exists
      ansible.builtin.stat:
        path: "{{ net_share.samba.restore_private }}/secrets.tdb"
      register: secrets_tdb
      failed_when: >
        secrets_tdb.stat.exists == 'False' or
        secrets_tdb.stat.isreg == 'False'

    - name: find smbd PRIVATE_DIR
      ansible.builtin.shell: smbd -b | grep PRIVATE_DIR | cut -d ":" -f 2 | xargs
      register: private_dir

    - name: restore passdb.tdb
      ansible.builtin.copy:
        src: "{{ net_share.samba.restore_private }}/passdb.tdb"
        remote_src: true
        dest: "{{ private_dir.stdout }}/passdb.tdb"
        owner: root
        group: root
        mode: u=rw,g-rwx,o-rwx

    - name: restore secrets.tdb
      ansible.builtin.copy:
        src: "{{ net_share.samba.restore_private }}/secrets.tdb"
        remote_src: true
        dest: "{{ private_dir.stdout }}/secrets.tdb"
        owner: root
        group: root
        mode: u=rw,g-rwx,o-rwx

    - name: restart SAMBA service
      ansible.builtin.service:
        name: smbd
        state: restarted
        enabled: true
