---
## ------------------------------------- ##
## Alter an XPath defined property of VM ##
## ------------------------------------- ##

# XXX: editing the VM configuration XML sometimes requires multiple changes to
# be staged before applying the new definition.  Because of this, this process
# allows for the deferred accrual of changes via the `defer` property. The
# specification of this property must follow the following order:
#   [initial, carry, ...., carry, apply]

- name: use current VM definition
  when: >
    libvirt_xpath.defer is not defined or
    libvirt_xpath.defer == 'initial'
  block:
    - name: get XML of current VM definition
      community.libvirt.virt:
        command: get_xml
        name: "{{ libvirt.vm.name }}"
      register: current_domain_xml

    - name: get current domain XML content
      ansible.builtin.set_fact:
        selected_domain_xml: "{{ current_domain_xml.get_xml }}"

- name: use deferred domain XML
  when: >
    libvirt_xpath.defer is defined and
    libvirt_xpath.defer != 'initial'
  block:
    - name: get contents of deferred XML
      ansible.builtin.command: cat {{ libvirt_defered_xml }}
      changed_when: false
      register: deferred_domain_xml

    - name: capture deferred domain XML content
      ansible.builtin.set_fact:
        selected_domain_xml: "{{ deferred_domain_xml.stdout }}"

# - name: print selected_domain_xml
#   debug:
#     var: selected_domain_xml

- name: alter XML by XPath "{{ libvirt_xpath.xpath }}"
  community.general.xml:
    xmlstring: "{{ selected_domain_xml }}"
    xpath: "{{ libvirt_xpath.xpath }}"
    add_children: "{{ libvirt_xpath.add_children | default(omit) }}"
    attribute: "{{ libvirt_xpath.attribute | default(omit) }}"
    value: "{{ libvirt_xpath.value | default(omit) }}"
    state: "{{ libvirt_xpath.state | default(omit) }}"
    pretty_print: true
  register: altered_domain_xml

# - name: print altered_domain_xml
#   debug:
#     var: altered_domain_xml.xmlstring

- name: capture deferred domain XML alteration
  when: >
    libvirt_xpath.defer is defined and
    libvirt_xpath.defer != 'apply'
  ansible.builtin.copy:
    content: "{{ altered_domain_xml.xmlstring }}"
    dest: "{{ libvirt_defered_xml }}"
    force: true
    mode: u=rw,go-rwx

- name: apply domain configuration
  when: >
    libvirt_xpath.defer is not defined or
    libvirt_xpath.defer == 'apply'
  block:
    - name: define domain XML
      community.libvirt.virt:
        command: define
        xml: "{{ altered_domain_xml.xmlstring }}"

    - name: remove deferral XML
      when: libvirt_defered_xml is defined
      ansible.builtin.file:
        path: "{{ libvirt_defered_xml }}"
        state: absent
