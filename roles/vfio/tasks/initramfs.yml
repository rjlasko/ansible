---
## ------------------------------------------------------------ ##
## Use initramfs to apply VFIO-pci driver by PCI bus ID on boot ##
## ------------------------------------------------------------ ##

- name: check if initramfs exists
  ansible.builtin.stat:
    path: "{{ initramfs_path }}"
  register: initramfs_path_exists
  failed_when: not initramfs_path_exists.stat.exists

# XXX: vfio_pci_ids is accumulated in discovery.yml via multiple calls to discover_device.yml
- loop: "{{ vfio_pci_ids }}"
  loop_control:
    loop_var: vfio_pci_id
  ansible.builtin.set_fact:
    vfio_initramfs_pci_ids: "{{ vfio_initramfs_pci_ids | default([]) + [':'.join(['0000', vfio_pci_id]) ] }}"

- ansible.builtin.set_fact:
    vfio_initramfs_pci_ids_formatted: "{{ ' '.join(vfio_initramfs_pci_ids) }}"

- ansible.builtin.template:
    src: vfio_pci.sh.j2
    dest: "{{ vfio_pci_rebind_path }}"
    mode: u+rx,go-rwx
    owner: root
    group: root

- name: "add vfio_pci kernel module to initramfs"
  ansible.builtin.lineinfile:
    path: "{{ initramfs_modules_path }}"
    line: 'vfio_pci'
    state: present

- name: update initramfs with new kernel boot parameters
  ansible.builtin.command: update-initramfs -u

# need to reboot to ensure those devices are ready for the VM upon start
- ansible.builtin.reboot:
    reboot_timeout: 600
