---
## ------------------------------------ ##
## This script sets up a user's crontab ##
## ------------------------------------ ##

- name: clear crontab
  when: crontab.reset | default(false)
  ansible.builtin.command: crontab -r
  ignore_errors: true

- name: append to user crontab from file
  when: crontab.file is defined
  block:
    - name: create temporary cron file
      ansible.builtin.tempfile:
        state: directory
      register: crontab_staging_dir

    - name: stage provided crontab
      ansible.builtin.copy:
        src: "{{ crontab.file }}"
        dest: "{{ crontab_staging_dir.path }}/cron.tab"
        force: true
        mode: u=rw,go-rwx

    - name: load staged crontab file
      ansible.builtin.command: crontab "{{ crontab_staging_dir.path }}/cron.tab"
      changed_when: true

  always:
    - name: remove staging directory
      ansible.builtin.file:
        path: "{{ crontab_staging_dir.path }}"
        state: absent

- name: "insert crontab entry"
  when: crontab.entries is defined
  loop: "{{ crontab.entries }}"
  loop_control:
    loop_var: crontab_entry
  ansible.builtin.cron:
    name: "{{ crontab_entry.name | mandatory }}"
    job: "{{ crontab_entry.job | mandatory }}"
    env: "{{ crontab_entry.env | default(omit) }}"
    special_time: "{{ crontab_entry.special_time | default(omit) }}"
    minute: "{{ crontab_entry.crontime[0] if crontab_entry.crontime is defined else omit }}"
    hour: "{{ crontab_entry.crontime[1] if crontab_entry.crontime is defined else omit }}"
    day: "{{ crontab_entry.crontime[2] if crontab_entry.crontime is defined else omit }}"
    month: "{{ crontab_entry.crontime[3] if crontab_entry.crontime is defined else omit }}"
    weekday: "{{ crontab_entry.crontime[4] if crontab_entry.crontime is defined else omit }}"
