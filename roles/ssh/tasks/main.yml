---
## ---------------------------------- ##
## Sets up SSH access for active user ##
## ---------------------------------- ##

- name: purge existing SSH keys
  when: ssh.purge_keys | default(false)
  include_tasks: purge_keys.yml

- name: loop over given key definitions
  loop: "{{ ssh.key_definitions | default([]) }}"
  loop_control:
    loop_var: ssh_key_def
  include_tasks: define_key.yml

- name: purge known_hosts
  when: ssh.purge_known_hosts | default(false)
  file:
    path: ~/.ssh/known_hosts
    state: absent

- name: predefine known hosts
  loop: "{{ ssh.known_hosts | default([]) }}"
  loop_control:
    loop_var: ssh_known_host
  include_tasks: recognize_known_host.yml

- name: purge authorized_keys
  when: ssh.purge_authorized_keys | default(false)
  file:
    path: ~/.ssh/authorized_keys
    state: absent

- name: authorized SSH login for given public keys
  loop: "{{ ssh.authorized_keys | default([]) }}"
  loop_control:
    loop_var: authorized_key
  include_tasks: authorize_key.yml

- name: authorize SSH self-login
  when: ssh.authorize_self | default(false)
  block:
    - name: find user's SSH public key
      find:
        patterns: "*.pub"
        paths: ~/.ssh
      register: find_pubkey_result
      failed_when: find_pubkey_result.matched != 1

    - name: get the user's public key
      command: "cat {{ find_pubkey_result.files[0].path }}"
      register: user_pubkey

    - name: set user's SSH key as authorized
      include_tasks: authorize_key.yml
      vars:
        authorized_key: "{{ user_pubkey.stdout }}"
