---
## ---------------------------------------- ##
## Copies given SSH private and public keys ##
## ---------------------------------------- ##

- name: ensure key directory exists
  file:
    path: ~/.ssh
    state: directory
    mode: u=rwx,go-rwx

- name: detect prexisting pubkey
  stat:
    path: "~/.ssh/{{ ssh_key_name | mandatory }}.pub"
  register: original_pubkey

- name: copy public key
  copy:
    src: "{{ ssh_key_def.source.public | mandatory }}"
    dest: "~/.ssh/{{ ssh_key_name }}.pub"
    mode: u=rw,g=r,o=r
    decrypt: "{{ ssh_key_def.decrypt | default(omit) }}"
    force: "{{ ssh_key_def.replace | default(false) }}"

- name: get pubkey sans the comment
  shell: cat ~/.ssh/{{ ssh_key_name }}.pub | cut -d' ' -f1,2
  register: pub_key_no_comment

- name: update pubkey comment
  when: original_pubkey.stat.exists and ssh_key_def.replace | default(false)
  lineinfile:
    path: "~/.ssh/{{ ssh_key_name }}.pub"
    regexp: ".*"
    line: "{{ pub_key_no_comment.stdout }} {{ ssh_key_comment | mandatory }}"
    state: present

- name: copy private key
  copy:
    src: "{{ ssh_key_def.source.private | mandatory }}"
    dest: "~/.ssh/{{ ssh_key_name }}"
    mode: u=rw,go-rwx
    decrypt: "{{ ssh_key_def.decrypt | default(omit) }}"
    force: "{{ ssh_key_def.replace | default(false) }}"
