---
## ---------------------- ##
## Restore VM from backup ##
## ---------------------- ##

- name: restore VM from XML
  # TODO: look into using "virt" module to do this
  command: virsh define --file {{ libvirt_vm.backup_dir | mandatory }}/domain.xml

- name: get XML of restored VM definition
  virt:
    command: get_xml
    name: "{{ libvirt_vm.name }}"
  register: restored_domain_xml

- name: list expected VM block devices
  shell: virsh domblklist {{ libvirt_vm.name }} | tail -n+3 | awk '{print $2}' | sed '/^$/d'
  register: libvirt_vm_domblklist_vols

- name: list files in backup directory
  find:
    paths: "{{ libvirt_vm.backup_dir }}"
    file_type: file
  register: libvirt_vm_backup_dir_listing

- set_fact:
    libvirt_vm_backup_files: "{{ libvirt_vm_backup_dir_listing.files | map(attribute='path') | map('basename') | map('splitext') | map('first') | list }}"

- name: restore each disk associated with the restored VM definition
  loop: "{{ libvirt_vm_domblklist_vols.stdout_lines }}"
  loop_control:
    loop_var: libvirt_vm_domblklist_vol
  when: libvirt_vm_domblklist_vol | basename | splitext | first in libvirt_vm_backup_files
  include: restore_disk_image.yml
  vars:
    libvirt_vm_vol: "{{ libvirt_vm_domblklist_vol }}"
    libvirt_vm_xml: "{{ restored_domain_xml.get_xml }}"
