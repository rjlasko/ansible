---
## ------------- ##
## Installs jenv ##
## ------------- ##

- when: ansible_facts.system == 'Darwin'
  block:
    - name: install jenv (MacOS)
      community.general.homebrew:
        name: jenv
        state: present

- name: delete pre-existing jenv config
  when: jenv_reset
  ansible.builtin.file:
    path: "{{ jenv_home }}"
    state: absent

- when: ansible_facts.system == 'Linux'
  block:
    - name: "install jenv package to {{ jenv_home }} ({{ ansible_facts.os_family }} Linux)"
      ansible.builtin.git:
        repo: https://github.com/jenv/jenv.git
        dest: "{{ jenv_home }}"

    - name: "add jenv path to shell initialization script: {{ jenv_init_file }}"
      when: jenv_init_file
      ansible.builtin.blockinfile:
        path: "{{ jenv_init_file }}"
        create: true
        insertbefore: ".*jenv\ completions"
        marker: "# --- {mark} jenv execpath ---"
        block: |
          if ! $(echo "$PATH" | tr ":" "\n" | grep -qx "{{ jenv_bin }}") ; then
              export PATH="{{ jenv_bin }}:$PATH"
          fi
        state: present
        mode: u=rw,go=r

- name: first time init jenv
  environment:
    PATH: "{{ jenv_bin }}:{{ ansible_env.PATH }}"
  ansible.builtin.shell: 'eval "$(jenv init -)"'
  changed_when: false

- name: "add jenv init to shell initialization script: {{ jenv_init_file }}"
  when: jenv_init_file
  ansible.builtin.blockinfile:
    path: "{{ jenv_init_file }}"
    create: true
    insertafter: ".*jenv\ execpath"
    marker: "# --- {mark} jenv completions ---"
    block: 'eval "$(jenv init -)"'
    state: present
    mode: u=rw,go=r
