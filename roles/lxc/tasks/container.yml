---
## -------------------------- ##
## Build or Restore Container ##
## -------------------------- ##

- name: check invalid create mode
  when: lxc.container.create_mode | mandatory not in ['skip', 'build']
  fail:
    msg: "invalid lxc.container.create_mode: {{ lxc.container.create_mode }}"

- name: handle create container
  when: lxc.container.create_mode == 'build'
  block:

    - name: transform 'selected_cpus' into 'config.limits.cpu'
      when: lxc.container.selected_cpus is defined
      block:
        - command: cat /proc/cpuinfo
          register: proc_cpuinfo
        - name: transform 'selected_cpus' into 'config.limits.cpu'
          set_fact:
            lxc_custom_config:
               limits.cpu: "{{ lxc.container.selected_cpus | asNative(proc_cpuinfo.stdout_lines) }}"

    - name: declare and or merge config to custom
      when: >
        lxc.container.config is defined
        or
        lxc_custom_config is defined
      set_fact:
        lxc_custom_config: "{{ lxc.container.config | combine(lxc_custom_config | default({}), recursive=True) }}"

    - name: clear pre-existing container
      lxd_container:
        name: "{{ lxc.container.name | mandatory}}"
        state: absent
        # TODO: do this only if trying without it fails
        force_stop: true

    - name: create & (re)start container
      lxd_container:
        name: "{{ lxc.container.name }}"
        state: restarted
        source:
          server: "{{ lxc.container.server | mandatory }}"
          alias: "{{ lxc.container.alias | mandatory }}"
          # if you get a 404, try setting protocol: simplestreams
          protocol: "{{ lxc.container.protocol | default('lxd') }}"
          type: image
          mode: pull
        config: "{{ lxc_custom_config | default(omit) }}"
        devices: "{{ lxc.container.devices | default(omit) }}"
        profiles: "{{ lxc.container.profiles | default(omit) }}"
        wait_for_ipv4_addresses: true
        timeout: 600

- name: "wait for {{ lxc.container.name }} to respond with SSHd"
  wait_for:
    host: "{{ lxc.container.dns_address | mandatory }}"
    port: 22
