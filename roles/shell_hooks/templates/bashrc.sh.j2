#!/usr/bin/env sh

if [ -n "${SHK_DEBUG}" ] ; then
	echo "${USER}@$(hostname) sourcing: ${HOME}/.bashrc"
fi

# only run shell hooks on shell start, or if reset is requested
if [ -z "${SHK_ROOT}" ] ; then
	# if the PATH inherited by shell_hooks has not been set, then set it now
	# this should be the first thing we do
	if [ -z "${SHK_INHERITED_PATH}" ]; then
		export SHK_INHERITED_PATH="${PATH}"
	fi

	SHK_ROOT="${HOME}/.shell_hooks"

	debug() {
		if [ -n "${SHK_DEBUG}" ] ; then
			>&2 echo "${1}"
		fi
	}

	# then, if we desire to reinitialize bash, we can do it here after restoring the original path
	rebash() {
		unset SHK_ROOT SHK_LOGIN
		export PATH="${SHK_INHERITED_PATH}"
		if [ "${1:-}" == '-v' ] ; then
			SHK_DEBUG=1 . "${HOME}/.bash_profile"
		else
			. "${HOME}/.bash_profile"
		fi
	}

	source_hook() {
		hook_filepath="${1}"
		hook_dir="$(cd "$(dirname "${hook_filepath}")" && pwd -P)"
		hook_name="$(basename "${hook_filepath}")"
		start_dir="$(pwd)"
		debug "${USER}@$(hostname) sourcing: ${hook_dir}/${hook_name}"
		cd "${hook_dir}"
		. "${hook_name}"
		cd "${start_dir}"
		unset hook_filepath hook_dir hook_name start_dir
	}

	source_hooks() {
		hooks_folder="${1}"
		if [ -d "${hooks_folder}" ] ; then
			for hook in $(find "${hooks_folder}" -maxdepth 1 \( -type f -or -type l \) -print | LC_COLLATE=C sort) ; do
				source_hook "${hook}"
			done
		fi
		unset hooks_folder hook
	}

	# load hooks for non-interactive shells
	source_hooks "${SHK_ROOT}/startup"

	# load original shell settings, if any
	if [ -f "${HOME}/.bashrc.ORIG" ]
	then
		. "${HOME}/.bashrc.ORIG"
	fi

	# If not running interactively, don't load anything more!
	case $- in
		*i*) ;;
		  *) return;;
	esac

	# load hooks for interactive shells
	source_hooks "${SHK_ROOT}/interactive"

fi
