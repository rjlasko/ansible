---
## -------------------------------------------------- ##
## Configures a system to utilize "huge" memory pages ##
## -------------------------------------------------- ##

# XXX: see the following good references for this modules
# https://mpolednik.github.io/2017/06/20/hugepages-and-virtualization/
# https://wiki.debian.org/Hugepages
# https://www.kernel.org/doc/Documentation/vm/hugetlbpage.txt
# https://forum.level1techs.com/t/vfio-in-2019-pop-os-how-to-general-guide-though-draft/142287
# http://vfiogaming.blogspot.com/2017/08/guide-how-to-enable-huge-pages-to.html


- name: get current huge page size
  ansible.builtin.shell: >
    set -o pipefail
    && grep Hugepagesize /proc/meminfo
    | cut -d ":" -f 2
    | xargs
  args:
    executable: bash
  changed_when: false
  register: hugepagesize_shell

# TODO: currently does not change the hugepage size
# TODO: How do I find out how many "huge" pages that my CPU can support?
# XXX: https://wiki.debian.org/Hugepages#Multiple_huge_page_size_support
- name: verify hugepages size set correctly
  ansible.builtin.assert:
    that:
      - "{{ hugepagesize_shell.stdout | human_to_bytes }} == {{ hugepages.size | mandatory | human_to_bytes }}"
      - "{{ hugepages.size | human_to_bytes }} != 0"

# TODO: Currently, only libvirt/kvm/qemu uses hugepages, and runs as 'root'.
# If we want non-root users to have access to hugepages, then we will need to
# make that available via a special GID association.  We will also need to raise
# the associated memory limit
- name: enable hugetables for non-root access
  when: hugepages.group is defined
  block:
    # TODO: not yet needed, so implementation not tested
    - name: not fully implemented, def not tested!
      ansible.builtin.fail:
        msg: implementation not complete

    - name: calculate mem for user-locking
      ansible.builtin.set_fact:
        total_hugepages_kb: "{{ (hugepages.total | human_to_bytes / 1024 | round(0, 'ceil') | int }}"
        lock_limit_buffer_kb: 64

    - name: get the GID for the given group name
      ansible.builtin.command: id {{ hugepages.group }} -g
      changed_when: false
      register: hugepages_gid

    # XXX: https://wiki.debian.org/Hugepages#Hugepage_enabled_applications
    - name: set the GID for programs that access the mount via shared memory
      ansible.builtin.lineinfile:
        dest: /etc/sysctl.conf
        state: present
        regexp: '^#?vm.hugetlb_shm_group'
        line: "vm.hugetlb_shm_group={{ hugepages_gid.stdout }}"

    # define memory lock limits
    # XXX: https://wiki.debian.org/Hugepages#limits.conf
    # XXX: https://linuxhint.com/linux_ulimit_command/

    - name: set soft limit
      ansible.builtin.lineinfile:
        dest: /etc/security/limits.conf
        state: present
        regexp: # FIXME
        line: "@{{ hugepages.group }} soft memlock {{ (total_hugepages_kb + lock_limit_buffer_kb) }}"

    - name: set hard limit
      ansible.builtin.lineinfile:
        dest: /etc/security/limits.conf
        state: present
        regexp: # FIXME
        line: "@{{ hugepages.group }} hard memlock {{ (total_hugepages_kb + lock_limit_buffer_kb) }}"

# It is required that the total hugepage size to reserve is specified
# we divide this number by the hugepagesize, ceiling'd, and set as appropriate
- name: calculate number of huge pages to preallocate at boot
  ansible.builtin.set_fact:
    num_hugepages: "{{ (hugepages.total | mandatory | human_to_bytes / hugepages.size | human_to_bytes) | round(0, 'ceil') | int }}"

- name: set the number of huge pages to preallocate at boot
  ansible.builtin.lineinfile:
    dest: /etc/sysctl.conf
    state: present
    regexp: '^#?vm.nr_hugepages'
    line: "vm.nr_hugepages={{ num_hugepages }}"

# XXX: http://vfiogaming.blogspot.com/2017/08/guide-how-to-enable-huge-pages-to.html
- name: disable transparent huge pages
  when: not (hugepages.transparent | default(false))
  ansible.builtin.copy:
    src: "{{ role_path }}/files/disable-thp.service"
    dest: /etc/systemd/system/disable-thp.service
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: enable transparent huge pages
  when: hugepages.transparent | default(false)
  ansible.builtin.file:
    path: /etc/systemd/system/disable-thp.service
    state: absent

# XXX: https://wiki.debian.org/systemd/Services
- name: force systemd to find and load all new services
  ansible.builtin.systemd:
    daemon_reload: true

- name: enable and start disable-thp service
  when: not (hugepages.transparent | default(false))
  ansible.builtin.systemd:
    name: disable-thp
    enabled: true
    state: restarted

- name: reboot to activate hugepages
  ansible.builtin.reboot:
    reboot_timeout: 600
