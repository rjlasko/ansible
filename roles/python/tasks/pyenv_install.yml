---
## -------------- ##
## Installs pyenv ##
## -------------- ##

- when: ansible_facts.system == 'Darwin'
  block:
    - name: "install pyenv (MacOS)"
      loop:
        - pyenv
        - pyenv-virtualenv
      loop_control:
        loop_var: brew_target
      community.general.homebrew:
        name: "{{ brew_target }}"
        state: present

- name: delete pre-existing pyenv config and python installations (MacOS)
  when: pyenv_reset
  ansible.builtin.file:
    path: "{{ pyenv_home }}"
    state: absent

- when: ansible_facts.system == 'Linux'
  block:
    - name: "install pyenv to {{ pyenv_home }} ({{ ansible_facts.os_family }} Linux)"
      ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv.git
        dest: "{{ pyenv_home }}"

    - name: "install pyenv-virtualenv to {{ pyenv_home }} ({{ ansible_facts.os_family }} Linux)"
      ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv-virtualenv.git
        dest: "{{ pyenv_home }}/plugins/pyenv-virtualenv"

    - name: "add pyenv path to shell initialization script: {{ python_init_file }}"
      when: python_init_file is defined
      ansible.builtin.blockinfile:
        path: "{{ python_init_file }}"
        create: true
        insertbefore: ".*pyenv\ completions"
        marker: "# --- {mark} pyenv execpath ---"
        block: |
          if ! $(echo "$PATH" | tr ":" "\n" | grep -qx "{{ pyenv_bin }}") ; then
              export PATH="{{ pyenv_bin }}:$PATH"
          fi
        state: present
        mode: u=rw,go=r

- name: "add pyenv init to shell initialization script: {{ python_init_file }}"
  when: python_init_file is defined
  ansible.builtin.blockinfile:
    path: "{{ python_init_file }}"
    create: true
    insertafter: ".*pyenv\ execpath"
    marker: "# --- {mark} pyenv completions ---"
    block: |
      eval "$(pyenv init -)"
      eval "$(pyenv virtualenv-init -)"
    state: present
    mode: u=rw,g=r,o-rwx
