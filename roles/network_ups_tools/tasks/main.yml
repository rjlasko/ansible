---
## --------------------------------------------------------------------------- ##
## This script seeks to automate the installation of a Network UPS Tools (NUT) ##
## --------------------------------------------------------------------------- ##
# XXX: With inspiration from - https://github.com/ykuksenko/ansible.nut

# TODO: send emails on relevant status changes
# https://unix.stackexchange.com/questions/164788/run-various-shell-commands-when-nut-reports-a-low-ups-battery


- name: autogenerate totally random password
  ansible.builtin.set_fact:
    nut_default_password: "{{ 9999999999999999999999 | random | to_uuid }}"

- name: install network UPS tools
  ansible.builtin.package:
    name: nut
    state: present

- name: nut.conf
  ansible.builtin.lineinfile:
    dest: "{{ nut_config_path }}/nut.conf"
    state: present
    regexp: '^MODE'
    line: "MODE={{ nut.mode }}"

- when: nut.mode == "standalone"
  ansible.builtin.include_tasks: server.yml

- when: nut.mode == "netclient" or nut.mode == "standalone"
  ansible.builtin.include_tasks: monitor.yml

- name: check ups connection
  loop: "{{ nut_monitor_names }}"
  loop_control:
    loop_var: nut_monitor_name
  ansible.builtin.command: "upsc {{ nut_monitor_name }}"
  changed_when: false
  register: upsc_out

- name: display ups info
  ansible.builtin.debug:
    msg: "{{ upsc_out }}"
